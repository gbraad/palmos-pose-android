/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_perpendox_phem_PHEMNativeIF */

#ifndef _Included_com_perpendox_phem_PHEMNativeIF
#define _Included_com_perpendox_phem_PHEMNativeIF
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    SetPHEMDir
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_SetPHEMDir
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    GetSessionInfo
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobject JNICALL Java_com_perpendox_phem_PHEMNativeIF_GetSessionInfo
  (JNIEnv *, jclass);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    GetROMDevices
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobject JNICALL Java_com_perpendox_phem_PHEMNativeIF_GetROMDevices
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    GetDeviceMemories
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobject JNICALL Java_com_perpendox_phem_PHEMNativeIF_GetDeviceMemories
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    GetDeviceSkins
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobject JNICALL Java_com_perpendox_phem_PHEMNativeIF_GetDeviceSkins
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    NewSession
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_NewSession
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    RestartSession
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_RestartSession
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    SaveSession
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_SaveSession
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    InstallPalmFile
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_perpendox_phem_PHEMNativeIF_InstallPalmFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    HandleIdle
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_com_perpendox_phem_PHEMNativeIF_HandleIdle
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    PenDown
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_com_perpendox_phem_PHEMNativeIF_PenDown
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    PenMove
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_com_perpendox_phem_PHEMNativeIF_PenMove
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    PenUp
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_com_perpendox_phem_PHEMNativeIF_PenUp
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    KeyEvent
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_perpendox_phem_PHEMNativeIF_KeyEvent
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    ButtonEvent
 * Signature: (IZ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_perpendox_phem_PHEMNativeIF_ButtonEvent
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    ResetEmulator
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_ResetEmulator
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    PauseEmulation
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_PauseEmulation
  (JNIEnv *, jclass);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    ResumeEmulation
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_ResumeEmulation
  (JNIEnv *, jclass);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    ShutdownEmulator
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_ShutdownEmulator
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    GetCurrentDevice
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_perpendox_phem_PHEMNativeIF_GetCurrentDevice
  (JNIEnv *, jclass);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    IsVFSManagerPresent
 * Signature: ()Z
 */
JNIEXPORT jint JNICALL Java_com_perpendox_phem_PHEMNativeIF_IsVFSManagerPresent
  (JNIEnv *, jclass);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    GetPalmEncoding
 * Signature: ()Z
 */
JNIEXPORT jint JNICALL Java_com_perpendox_phem_PHEMNativeIF_GetPalmEncoding
  (JNIEnv *, jclass);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    IsHostFSPresent
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_perpendox_phem_PHEMNativeIF_IsHostFSPresent
  (JNIEnv *, jclass);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    GetCurrentCardDir
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_perpendox_phem_PHEMNativeIF_GetCurrentCardDir
  (JNIEnv *, jclass);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    SetCurrentCardDir
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_SetCurrentCardDir
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    GetCardMountStatus
 * Signature: ()Z;
 */
JNIEXPORT jboolean JNICALL Java_com_perpendox_phem_PHEMNativeIF_GetCardMountStatus
  (JNIEnv *, jclass);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    SetCardMountStatus
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_SetCardMountStatus
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    GetNetlibRedirect
 * Signature: ()Z;
 */
JNIEXPORT jboolean JNICALL Java_com_perpendox_phem_PHEMNativeIF_GetNetlibRedirect
  (JNIEnv *, jclass);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    SetNetlibRedirect
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_SetNetlibRedirect
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    GetScale
 * Signature: ()Z;
 */
JNIEXPORT jboolean JNICALL Java_com_perpendox_phem_PHEMNativeIF_GetScale
  (JNIEnv *, jclass);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    SetScale
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_SetScale
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    GetHotSyncName
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_perpendox_phem_PHEMNativeIF_GetHotSyncName
  (JNIEnv *, jclass);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    SetHotSyncName
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_SetHotSyncName
  (JNIEnv *env, jclass clazz, jobject buf);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    GetSerialDevice
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_perpendox_phem_PHEMNativeIF_GetSerialDevice
  (JNIEnv *, jclass);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    SetSerialDevice
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_SetSerialDevice
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_perpendox_phem_PHEMNativeIF
 * Method:    PassNMEA
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_perpendox_phem_PHEMNativeIF_PassNMEA
  (JNIEnv *, jclass, jstring);
#ifdef __cplusplus
}
#endif
#endif
